version: '3.8'

services:
  spark-master:
    image: bitnami/spark:3.2.1
    environment:
      - SPARK_MODE=master
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    user: root
    ports:
      - '8080:8080'
      - '7077:7077'
    networks:
      - net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 5

  spark-worker1:
    image: bitnami/spark:3.2.1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    user: root
    ports:
      - '8081:8081'
    networks:
      - net
    depends_on:
      spark-master:
        condition: service_healthy

  spark-worker2:
    image: bitnami/spark:3.2.1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
      - SPARK_WORKER_MEMORY=1G
      - SPARK_WORKER_CORES=1
      - SPARK_RPC_AUTHENTICATION_ENABLED=no
      - SPARK_RPC_ENCRYPTION_ENABLED=no
      - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
      - SPARK_SSL_ENABLED=no
    user: root
    ports:
      - '8082:8082'
    networks:
      - net
    depends_on:
      spark-master:
        condition: service_healthy

  spark-notebook:
    image: jupyter/pyspark-notebook:latest
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    ports:
      - '9001:8888'
    networks:
      - net
    volumes:
      - ./notebook_data:/home/jovyan/work
    depends_on:
      spark-master:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888"]
      interval: 30s
      timeout: 10s
      retries: 5

  db:
    container_name: pg_container
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "12345"
      POSTGRES_DB: "db"
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    networks:
      - net
    volumes:
      - pg_data:/var/lib/postgresql/data

volumes:
  pg_data:

networks:
  net:
    driver: bridge
